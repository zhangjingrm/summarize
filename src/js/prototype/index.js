//Object.create()
//Object.getPrototypeOf()
//prototype
//hasOwnPrototype
//constructor

/*----------------------------------------------------------------------------------------------------*/



/*----------------------------------------------------------------------------------------------------*/

//Object.create() 方法创建一个新对象，使用现有的对象来提供新创建的对象的__proto__
let person = {
  isHuman: false,
  printIntroduction: function () {
    console.log(`My name is ${this.name}. Am I human? ${this.isHuman}`);
  }
}

let me = Object.create(person)

me //{ __proto__: {isHuman...} }

/*----------------------------------------------------------------------------------------------------*/

//prototype（构造函数 ---> 原型对象）
//不像每个对象都有__proto__属性来标识自己所继承的原型，只有函数才有prototype属性。

/*----------------------------------------------------------------------------------------------------*/

//constructor（原型对象 ---> 构造函数）

/*----------------------------------------------------------------------------------------------------*/

//__proto__（实例对象 ---> 原型对象）

/*----------------------------------------------------------------------------------------------------*/



/*----------------------------------------------------------------------------------------------------*/



/*----------------------------------------------------------------------------------------------------*/



/*----------------------------------------------------------------------------------------------------*/